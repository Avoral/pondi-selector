{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/click.directive.ts","webpack:///src/app/ingredient.service.ts","webpack:///src/app/ingredients-selector/ingredients-selector.component.ts","webpack:///src/app/ingredients-selector/ingredients-selector.component.html","webpack:///src/app/ingredients/ingredients.component.ts","webpack:///src/app/ingredients/ingredients.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ClickDirective","isActive","isActiveRed","event","ctrlKey","IngredientService","ingredientsArray","ingredients","split","fontSize","providedIn","IngredientsSelectorComponent","ingredientService","console","log","IngredientsComponent","route","saveIngredients","ingredientTextArea","nativeElement","value","saveFontSize","fontsize","navigate","save","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {IngredientsComponent} from './ingredients/ingredients.component';\nimport {IngredientsSelectorComponent} from './ingredients-selector/ingredients-selector.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IngredientsComponent\n  },\n  {\n    path: 'selector',\n    component: IngredientsSelectorComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, HostListener} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'pondi-selector';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { IngredientsComponent } from './ingredients/ingredients.component';\nimport { IngredientsSelectorComponent } from './ingredients-selector/ingredients-selector.component';\nimport {CommonModule} from '@angular/common';\nimport { ClickDirective } from './click.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IngredientsComponent,\n    IngredientsSelectorComponent,\n    ClickDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Directive, HostBinding, HostListener} from '@angular/core';\n\n@Directive({\n  selector: '[appClick]'\n})\nexport class ClickDirective {\n\n  @HostBinding('class.clicked') isActive = false;\n  @HostBinding('class.clicked-red') isActiveRed = false;\n\n  constructor() { }\n\n  @HostListener('click', ['$event']) onClick(event){\n    if (event.ctrlKey) {\n      this.isActiveRed = true;\n      return;\n    } else {\n      if (this.isActive || this.isActiveRed) {\n        this.isActive = false;\n        this.isActiveRed = false;\n      } else {\n        this.isActive = true;\n      }\n    }\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngredientService {\n  public ingredients: string;\n  public fontSize: string;\n  public ingredientsArray: string[] = [];\n\n\n  constructor() { }\n\n  public saveIngredients(ingredients: string): void {\n    this.ingredientsArray = ingredients.split(',');\n  }\n  public saveFontSize(fontSize: string): void {\n    this.fontSize = fontSize;\n  }\n}\n","import {Component, HostBinding, HostListener, OnInit} from '@angular/core';\nimport {IngredientService} from '../ingredient.service';\n\n@Component({\n    selector: 'app-ingredients-selector',\n    templateUrl: './ingredients-selector.component.html',\n    styleUrls: ['./ingredients-selector.component.scss']\n  })\n  export class IngredientsSelectorComponent implements OnInit {\n\n  @HostBinding('style.font-size')\n  public fontSize = 24;\n\n  constructor(public ingredientService: IngredientService) { }\n\n  ngOnInit(): void {\n  }\n\n  @HostListener('document:keypress')\n  public escapeClicked(): void {\n    console.log('dawaj eskejpa');\n  }\n}\n","<div [ngStyle]=\"{'font-size.px': ingredientService.fontSize}\">\n<ng-container *ngFor=\"let ingr of ingredientService.ingredientsArray; let index = index\">\n\n  <span class=\"ingr\" appClick >{{ingr}}</span>\n  <span class=\"ingr-coma\" *ngIf=\"index+1 !== ingredientService.ingredientsArray.length\">,</span>\n\n</ng-container>\n\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {IngredientService} from '../ingredient.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-ingredients',\n  templateUrl: './ingredients.component.html',\n  styleUrls: ['./ingredients.component.scss']\n})\nexport class IngredientsComponent implements OnInit {\n  @ViewChild('ingredientTextArea')\n  public ingredientTextArea: ElementRef;\n  @ViewChild('fontsize')\n  public fontsize: ElementRef;\n\n  constructor(public ingredientService: IngredientService, public route: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  public save(): void {\n    this.ingredientService.saveIngredients(this.ingredientTextArea.nativeElement.value);\n    this.ingredientService.saveFontSize(this.fontsize.nativeElement.value);\n    this.route.navigate(['/selector']);\n  }\n\n}\n","<h1 class=\"header\">Podaj składniki</h1>\n<textarea class=\"area\" aria-label=\"Składniki\" #ingredientTextArea>\n\n</textarea>\n<h1 class=\"header\">Rozmiar czcionki</h1>\n<input aria-label=\"suwak\" #fontsize type=\"range\" value=\"24\" [min]=\"20\" [max]=\"60\">\n<button (click)=\"save()\">Zapisz</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}